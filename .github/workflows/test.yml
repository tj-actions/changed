name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test changed-files
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - run: |
          echo "$GITHUB_EVENT_PATH"
          cat "$GITHUB_EVENT_PATH"
          if [ -z "$PR_NUMBER" ]; then
            PR_NUMBER=$(jq -r ".pull_request.number" "$GITHUB_EVENT_PATH")
            if [[ "$PR_NUMBER" == "null" ]]; then
              PR_NUMBER=$(jq -r ".issue.number" "$GITHUB_EVENT_PATH")
            fi
            if [[ "$PR_NUMBER" == "null" ]]; then
              echo "Failed to determine PR Number."
              exit 1
            fi
          fi
          echo "$PR_NUMBER"
          URI=https://api.github.com
          API_HEADER="Accept: application/vnd.github.v3+json"
          AUTH_HEADER="Authorization: token $GITHUB_TOKEN"

          MAX_RETRIES=${MAX_RETRIES:-6}
          RETRY_INTERVAL=${RETRY_INTERVAL:-10}
          REBASEABLE=""

          USER_LOGIN=$(jq -r ".comment.user.login" "$GITHUB_EVENT_PATH")

          user_resp=$(curl -X GET -s -H "${AUTH_HEADER}" -H "${API_HEADER}" \
            "${URI}/users/${USER_LOGIN}")

          USER_NAME=$(echo "$user_resp" | jq -r ".name")
          if [[ "$USER_NAME" == "null" ]]; then
            USER_NAME=$USER_LOGIN
          fi
          USER_NAME="${USER_NAME} (Rebase PR Action)"

          USER_EMAIL=$(echo "$user_resp" | jq -r ".email")
          if [[ "$USER_EMAIL" == "null" ]]; then
            USER_EMAIL="$USER_LOGIN@users.noreply.github.com"
          fi

          echo "$USER_LOGIN"
          echo "$USER_NAME"
          echo "$USER_EMAIL"
      - name: Run changed-files with defaults
        id: changed-files
        uses: ./
      - name: Show output
        run: |
          echo "${{ toJSON(steps.changed-files.outputs) }}"
      - name: List all modified files
        run: |
          for file in "${{ steps.changed-files.outputs.modified_files }}"; do
            echo $file
          done
      - name: Run step when README.md changes
        if: contains(steps.changed-files.outputs.modified_files, 'README.md')
        run: |
          echo "Your README.md has been modified ${{ steps.changed-files.outputs.modified_files }}."
      - name: Run changed-files with comma separator
        id: changed-files-comma
        uses: ./
        with:
          separator: ","
      - name: Show output
        run: |
          echo "${{ toJSON(steps.changed-files-comma.outputs) }}"
      - name: Run changed-files with specific files
        id: changed-files-specific
        uses: ./
        with:
          files: |
            .github/workflows/test.yml
            action.yml
      - name: Show output
        run: |
          echo "${{ toJSON(steps.changed-files-specific.outputs) }}"
      - name: Run changed-files with specific files comma separator
        id: changed-files-specific-comma
        uses: ./
        with:
          files: |
            .github/workflows/test.yml
            action.yml
          separator: ","
      - name: Show output
        run: |
          echo "${{ toJSON(steps.changed-files-specific-comma.outputs) }}"
